@model List<PConsulting.Data.Article>

@{
    ViewData["Title"] = "Articles";
}
<h1>@ViewData["Title"]</h1>

<head>
    <style>
        #table td {
            vertical-align: middle;
        }
    </style>
</head>

<div id="MyModal" class="modal fade in">
    <div class="modal-dialog">
        <div class="modal-content">
            <div id="MyModalContent"></div>
        </div>
    </div>
</div>

<div class="container">
    <form asp-controller="Articles" asp-action="Index" method="post" enctype="multipart/form-data">
        <div id="toolbar" class="btn-group">
            @Html.ActionLink("New Article", "Create", null, null, new { id = "cmdCreate", @class = "btn btn-primary" })
        </div>

        <div class="container-fluid">
            <table id="table"
                   data-unique-id="Id"
                   data-sort-name="PublishDate"
                   data-sort-order="desc"
                   data-classes="table table-condensed table-hover table-striped"
                   data-toggle="table"
                   data-side-pagination="server"
                   data-url="/Articles/LoadArticles"
                   data-pagination="true"
                   data-show-refresh="true"
                   data-search="true"
                   data-toolbar="#toolbar"
                   data-page-size="5"
                   data-page-list="[5,10,20,50,100,All]">
                <thead>
                    <tr>
                        <th data-field="Id" data-visible="false" data-sortable="false" data-halign="center" data-align="center">Id</th>
                        <th data-field="ArticleTitle" data-sortable="true" data-halign="center" data-align="Left" data-width="350">Title</th>
                        <th data-field="PublishDate" data-sortable="true" data-halign="center" data-align="center" data-width="80">Publish Date</th>
                        <th data-field="operate" data-align="center" data-width="150" data-events="operateEvents" data-formatter="operateFormatter"></th>
                    </tr>
                </thead>
            </table>
        </div>
    </form>
</div>
<br />
<hr />
<br />
<h4>Most Liked Articles</h4>
@{
    var XLabels = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Select(x => x.ArticleTitle.Substring(0, (x.ArticleTitle.Length >= 20 ? 20 : x.ArticleTitle.Length))).ToList());
    var YValues = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Select(x => x.LikeCount).ToList());
}
<hr />
<div class="chart-container">
    <canvas id="likesChart" style="width:100%; height:300px"></canvas>
</div>

@section scripts {
    <script type="text/javascript">

        $(function () {
            $.ajaxSetup({ cache: false });
            $("a[data-modal]").on("click", function (e) {
                $("#MyModalContent").load(this.href, function () {
                    $("#MyModal").modal({
                        keyboard: false
                    }, 'show');
                    bindForm(this);
                });
                return false;
            });
        });

        function bindForm(dialog) {
            $('form', dialog).submit(function () {
                $.ajax({
                    url: this.action,
                    type: this.method,
                    data: $(this).serialize(),
                    success: function (result) {
                        if (result.success) {
                            $("#MyModal").modal('hide');
                            toastr.success(result.message);
                            //Update grid
                            var $table = $('#table');
                            $table.bootstrapTable('refresh', { silent: true });
                        }
                        else {
                            $("#MyModal").modal('show');
                            toastr.error(result.message);
                            bindForm(dialog);
                        }
                    },
                    error: function (xml, message, text) {
                        toastr.error("Msg: " + message + ", Text: " + text);
                    }
                });
                return false;
            });
        }

        var $table = $('#table'),
            $remove = $('#remove'),
            selections = [];
        function operateFormatter(value, row, index) {
            return [
                '<a id="editModal" href="/Articles/Update/',
                row.Id,
                '" class="btn btn-info editRecord">Edit</a>&nbsp;&nbsp;',
                '<a id="deleteModal" data-toggle="modal" asp-action="Delete" asp-route-id="',
                row.Id,
                '" data-target="#modal-action-delete" class="btn btn-danger deleteRecord" style="color:white" onclick="Delete(',
                row.Id,
                ') ">Remove</a>'
            ].join('');
        }

        window.operateEvents = {
            'click .deleteRecord': function (e, value, row, index) {
                Delete(row.Id);
            }
        };


        var Delete = function (ID) {
            $.ajaxSetup({ cache: false });
            var Url = "/Articles/Delete/" + ID;
            $("#MyModalContent").load(Url, function () {
                $("#MyModal").modal({
                    //backdrop: 'static',
                    keyboard: false
                }, 'show');
                bindForm(this);
            });
            return false;
        }


        function highLightRow($tr) {
            $tr.addClass('highlight').siblings().removeClass('highlight');
        }

        $(document).ready(function () {
            var $table = $('#table');

            // register row-click event
            $table.on('click-row.bs.table', function ($element, row, $tr) {
                highLightRow($tr);
            });
        });

    </script>


    <script type="text/javascript">
        //ChartJS code for Most Liked Articles
        $(function () {
            var chartName = "likesChart";
            var ctx = document.getElementById(chartName).getContext('2d');
            var data = {
                    labels: @Html.Raw(XLabels),
                    datasets: [{
                        label: "Most Liked Articles",
                        backgroundColor: [
                            'rgba(255, 99, 132, 0.2)',
                            'rgba(54, 162, 235, 0.2)',
                            'rgba(255, 206, 86, 0.2)',
                            'rgba(75, 192, 192, 0.2)',
                            'rgba(153, 102, 255, 0.2)',
                            'rgba(255, 159, 64, 0.2)',
                            'rgba(255, 0, 0)',
                            'rgba(0, 255, 0)',
                            'rgba(0, 0, 255)',
                            'rgba(192, 192, 192)',
                            'rgba(255, 255, 0)',
                            'rgba(255, 0, 255)'
                        ],
                        borderColor: [
                            'rgba(255,99,132,1)',
                            'rgba(54, 162, 235, 1)',
                            'rgba(255, 206, 86, 1)',
                            'rgba(75, 192, 192, 1)',
                            'rgba(153, 102, 255, 1)',
                            'rgba(255, 159, 64, 1)',
                            'rgba(255, 0, 0)',
                            'rgba(0, 255, 0)',
                            'rgba(0, 0, 255)',
                            'rgba(192, 192, 192)',
                            'rgba(255, 255, 0)',
                            'rgba(255, 0, 255)'
                        ],
                        borderWidth: 1,
                        data: @Html.Raw(YValues)
                    }]
                };

            var options = {
                    maintainAspectRatio: false,
                    scales: {
                        yAxes: [{
                            ticks: {
                                min: 0,
                                beginAtZero: true
                            },
                            gridLines: {
                                display: true,
                                color: "rgba(255,99,164,0.2)"
                            }
                        }],
                        xAxes: [{
                            ticks: {
                                min: 0,
                                beginAtZero: true
                            },
                            gridLines: {
                                display: false
                            }
                        }]
                    }
                };

            var likeArticlesChart = new  Chart(ctx, {
                    options: options,
                    data: data,
                    type:'bar'

                    });
                });
    </script>
}
